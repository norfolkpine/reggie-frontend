name: Deploy Frontend to GCP VM (Optimized)

on:
  push:
    branches:
      - main
      - dev

env:
  PROJECT_ID: bh-reggie-test
  IMAGE_NAME_FRONTEND: reggie-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: GCP Authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        run: |
          IMAGE_FRONTEND=gcr.io/${PROJECT_ID}/${IMAGE_NAME_FRONTEND}:latest
          docker buildx build --builder default \
            --build-arg NEXT_PUBLIC_DEFAULT_AGENT_ID="$NEXT_PUBLIC_DEFAULT_AGENT_ID" \
            --build-arg NEXT_PUBLIC_API_ORIGIN="$NEXT_PUBLIC_API_ORIGIN" \
            --build-arg NEXT_PUBLIC_API_BASE_URL="$NEXT_PUBLIC_API_BASE_URL" \
            --build-arg NEXT_PUBLIC_NANGO_API_URL="$NEXT_PUBLIC_NANGO_API_URL" \
            --build-arg NEXT_PUBLIC_NANGO_BASE_URL="$NEXT_PUBLIC_NANGO_BASE_URL" \
            --build-arg COLLABORATION_WS_URL="$COLLABORATION_WS_URL" \
            --build-arg NEXT_PUBLIC_SENTRY_DSN="$NEXT_PUBLIC_SENTRY_DSN" \
            --build-arg SENTRY_AUTH_TOKEN="$SENTRY_AUTH_TOKEN" \
            --platform linux/amd64 \
            --push \
            -t "$IMAGE_FRONTEND" .
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          IMAGE_NAME_FRONTEND: ${{ env.IMAGE_NAME_FRONTEND }}
          NEXT_PUBLIC_DEFAULT_AGENT_ID: ${{ vars.NEXT_PUBLIC_DEFAULT_AGENT_ID }}
          NEXT_PUBLIC_API_ORIGIN: ${{ secrets.NEXT_PUBLIC_API_ORIGIN }}
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}
          NEXT_PUBLIC_NANGO_API_URL: ${{ vars.NEXT_PUBLIC_NANGO_API_URL }}
          NEXT_PUBLIC_NANGO_BASE_URL: ${{ vars.NEXT_PUBLIC_NANGO_BASE_URL }}
          COLLABORATION_WS_URL: ${{ secrets.COLLABORATION_WS_URL }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Deploy on VM (single command)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: github-actions
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/frontend
            # Update docker-compose.yml with new image
            IMAGE_FRONTEND=gcr.io/${PROJECT_ID}/${IMAGE_NAME_FRONTEND}:latest
            sed -i "s|\${IMAGE_FRONTEND}|$IMAGE_FRONTEND|g" docker-compose.yml
            
            # Pull and restart
            sudo docker-compose pull
            sudo docker-compose up -d --remove-orphans
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          IMAGE_NAME_FRONTEND: ${{ env.IMAGE_NAME_FRONTEND }}
