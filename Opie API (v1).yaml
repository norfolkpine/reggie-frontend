openapi: 3.0.3
info:
  title: Opie API
  version: 1.0.0 (v1)
  description: API documentation for Opie SaaS application
paths:
  /a/{team_slug}/team/api/invitations/:
    get:
      operationId: invitations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationList'
          description: ''
    post:
      operationId: invitations_create
      parameters:
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /a/{team_slug}/team/api/invitations/{id}/:
    get:
      operationId: invitations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    put:
      operationId: invitations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    patch:
      operationId: invitations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvitationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    delete:
      operationId: invitations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/jwt/token/:
    post:
      operationId: api_auth_jwt_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/jwt/token/refresh/:
    post:
      operationId: api_auth_jwt_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/mobile/login/:
    post:
      operationId: api_auth_mobile_login_create
      description: |-
        Secure mobile-friendly login endpoint.
        Accepts email/password and returns JWT tokens with proper validation.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/mobile/token/:
    post:
      operationId: api_auth_mobile_token_create
      description: |-
        Secure JWT token endpoint for mobile apps.
        Uses proper authentication and rate limiting.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/mobile/token/refresh/:
    post:
      operationId: api_auth_mobile_token_refresh_create
      description: Secure JWT token refresh endpoint for mobile apps.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/health/:
    get:
      operationId: api_health_retrieve
      description: A simple GET endpoint that verifies the service is up. Requires
        a valid API key.
      summary: Health check endpoint
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
          description: ''
  /api/test-dual-auth/:
    get:
      operationId: api_test_dual_auth_retrieve
      description: |-
        Test endpoint that demonstrates both JWT/session and API key authentication work.

        This endpoint can be accessed via:
        1. JWT token in Authorization header: Bearer <token>
        2. Session authentication (cookies)
        3. API key in Authorization header: Api-Key <key>
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/test-jwt-only/:
    get:
      operationId: api_test_jwt_only_retrieve
      description: |-
        Test endpoint that only accepts JWT/session authentication.

        This endpoint can be accessed via:
        1. JWT token in Authorization header: Bearer <token>
        2. Session authentication (cookies)

        API keys will be rejected.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1.0/config/:
    get:
      operationId: api_v1.0_config_retrieve
      description: |-
        GET /api/v1/config/
            Return a dictionary of public settings.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1.0/documents/:
    get:
      operationId: api_v1.0_documents_list
      description: List all documents accessible to the current user. Results are
        paginated and can be filtered.
      summary: List documents
      parameters:
      - in: query
        name: is_creator_me
        schema:
          type: boolean
        description: Filter documents created by the current user
      - in: query
        name: is_favorite
        schema:
          type: boolean
        description: Filter favorite documents
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: title
        schema:
          type: string
        description: Filter documents by title
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: api_v1.0_documents_create
      description: Create a new document. The current user will be set as the creator
        and owner.
      summary: Create document
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/{id}/:
    get:
      operationId: api_v1.0_documents_retrieve
      description: Get detailed information about a specific document.
      summary: Get document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: api_v1.0_documents_update
      description: Update all fields of a document.
      summary: Update document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: api_v1.0_documents_partial_update
      description: Update specific fields of a document.
      summary: Partially update document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_v1.0_documents_destroy
      description: Soft delete a document. The document will be moved to trash.
      summary: Delete document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1.0/documents/{id}/ai-transform/:
    post:
      operationId: api_v1.0_documents_ai_transform_create
      description: |-
        POST /api/v1/documents/<resource_id>/ai-transform
        with expected data:
        - text: str
        - action: str [prompt, correct, rephrase, summarize]
        Return JSON response with the processed text.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/{id}/ai-translate/:
    post:
      operationId: api_v1.0_documents_ai_translate_create
      description: |-
        POST /api/v1/documents/<resource_id>/ai-translate
        with expected data:
        - text: str
        - language: str [settings.LANGUAGES]
        Return JSON response with the translated text.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AITranslateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AITranslateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AITranslateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AITranslate'
          description: ''
  /api/v1.0/documents/{id}/attachment-upload/:
    post:
      operationId: api_v1.0_documents_attachment_upload_create
      description: Upload a file related to a given document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/{id}/children/:
    get:
      operationId: api_v1.0_documents_children_retrieve
      description: Handle listing and creating children of a document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocument'
          description: ''
    post:
      operationId: api_v1.0_documents_children_create
      description: Handle listing and creating children of a document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ListDocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocument'
          description: ''
  /api/v1.0/documents/{id}/cors-proxy/:
    get:
      operationId: api_v1.0_documents_cors_proxy_retrieve
      description: |-
        GET /api/v1/documents/<resource_id>/cors-proxy
        Act like a proxy to fetch external resources and bypass CORS restrictions.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/{id}/descendants/:
    get:
      operationId: api_v1.0_documents_descendants_retrieve
      description: Handle listing descendants of a document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocument'
          description: ''
  /api/v1.0/documents/{id}/duplicate/:
    post:
      operationId: api_v1.0_documents_duplicate_create
      description: |-
        Duplicate a document and store the links to attached files in the duplicated
        document to allow cross-access.

        Optionally duplicates accesses if `with_accesses` is set to true
        in the payload.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/{id}/favorite/:
    post:
      operationId: api_v1.0_documents_favorite_create
      description: Mark or unmark the document as a favorite for the logged-in user
        based on the HTTP method.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_v1.0_documents_favorite_destroy
      description: Mark or unmark the document as a favorite for the logged-in user
        based on the HTTP method.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1.0/documents/{id}/link-configuration/:
    put:
      operationId: api_v1.0_documents_link_configuration_update
      description: Update link configuration with specific rights (cf get_abilities).
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/{id}/move/:
    post:
      operationId: api_v1.0_documents_move_create
      description: |-
        Move a document to another location within the document tree.

        The user must be an administrator or owner of both the document being moved
        and the target parent document.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/{id}/restore/:
    post:
      operationId: api_v1.0_documents_restore_create
      description: Restore a soft-deleted document if it was deleted less than x days
        ago.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/{id}/tree/:
    get:
      operationId: api_v1.0_documents_tree_retrieve
      description: |-
        List ancestors tree above the document.
        What we need to display is the tree structure opened for the current document.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocument'
          description: ''
  /api/v1.0/documents/{id}/versions/:
    get:
      operationId: api_v1.0_documents_versions_retrieve
      description: |-
        Return the document's versions but only those created after the user got access
        to the document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/{id}/versions/{version_id}/:
    get:
      operationId: api_v1.0_documents_versions_retrieve_2
      description: Custom action to retrieve a specific version of a document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: version_id
        schema:
          type: string
          pattern: ^[0-9a-z-]+$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: api_v1.0_documents_versions_destroy
      description: Custom action to retrieve a specific version of a document
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: version_id
        schema:
          type: string
          pattern: ^[0-9a-z-]+$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1.0/documents/{resource_id}/accesses/:
    get:
      operationId: api_v1.0_documents_accesses_list
      description: |-
        API ViewSet for all interactions with document accesses.

        GET /api/v1/documents/<resource_id>/accesses/:<document_access_id>
            Return list of all document accesses related to the logged-in user or one
            document access if an id is provided.

        POST /api/v1/documents/<resource_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created document access

        PUT /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated document access

        PATCH /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document access

        DELETE /api/v1/documents/<resource_id>/accesses/<document_access_id>/
            Delete targeted document access
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentAccessLightList'
          description: ''
    post:
      operationId: api_v1.0_documents_accesses_create
      description: |-
        API ViewSet for all interactions with document accesses.

        GET /api/v1/documents/<resource_id>/accesses/:<document_access_id>
            Return list of all document accesses related to the logged-in user or one
            document access if an id is provided.

        POST /api/v1/documents/<resource_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created document access

        PUT /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated document access

        PATCH /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document access

        DELETE /api/v1/documents/<resource_id>/accesses/<document_access_id>/
            Delete targeted document access
      parameters:
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentAccessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentAccessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentAccessRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAccess'
          description: ''
  /api/v1.0/documents/{resource_id}/accesses/{id}/:
    get:
      operationId: api_v1.0_documents_accesses_retrieve
      description: |-
        API ViewSet for all interactions with document accesses.

        GET /api/v1/documents/<resource_id>/accesses/:<document_access_id>
            Return list of all document accesses related to the logged-in user or one
            document access if an id is provided.

        POST /api/v1/documents/<resource_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created document access

        PUT /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated document access

        PATCH /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document access

        DELETE /api/v1/documents/<resource_id>/accesses/<document_access_id>/
            Delete targeted document access
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAccess'
          description: ''
    put:
      operationId: api_v1.0_documents_accesses_update
      description: |-
        API ViewSet for all interactions with document accesses.

        GET /api/v1/documents/<resource_id>/accesses/:<document_access_id>
            Return list of all document accesses related to the logged-in user or one
            document access if an id is provided.

        POST /api/v1/documents/<resource_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created document access

        PUT /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated document access

        PATCH /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document access

        DELETE /api/v1/documents/<resource_id>/accesses/<document_access_id>/
            Delete targeted document access
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentAccessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentAccessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentAccessRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAccess'
          description: ''
    patch:
      operationId: api_v1.0_documents_accesses_partial_update
      description: |-
        API ViewSet for all interactions with document accesses.

        GET /api/v1/documents/<resource_id>/accesses/:<document_access_id>
            Return list of all document accesses related to the logged-in user or one
            document access if an id is provided.

        POST /api/v1/documents/<resource_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created document access

        PUT /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated document access

        PATCH /api/v1/documents/<resource_id>/accesses/<document_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document access

        DELETE /api/v1/documents/<resource_id>/accesses/<document_access_id>/
            Delete targeted document access
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentAccessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentAccessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentAccessRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAccess'
          description: ''
    delete:
      operationId: api_v1.0_documents_accesses_destroy
      description: Forbid deleting the last owner access
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1.0/documents/{resource_id}/invitations/:
    get:
      operationId: api_v1.0_documents_invitations_list
      description: |-
        API ViewSet for user invitations to document.

        GET /api/v1/documents/<document_id>/invitations/:<invitation_id>/
            Return list of invitations related to that document or one
            document access if an id is provided.

        POST /api/v1/documents/<document_id>/invitations/ with expected data:
            - email: str
            - role: str [administrator|editor|reader]
            Return newly created invitation (issuer and document are automatically set)

        PATCH /api/v1/documents/<document_id>/invitations/:<invitation_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document invitation

        DELETE  /api/v1/documents/<document_id>/invitations/<invitation_id>/
            Delete targeted invitation
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationList'
          description: ''
    post:
      operationId: api_v1.0_documents_invitations_create
      description: |-
        API ViewSet for user invitations to document.

        GET /api/v1/documents/<document_id>/invitations/:<invitation_id>/
            Return list of invitations related to that document or one
            document access if an id is provided.

        POST /api/v1/documents/<document_id>/invitations/ with expected data:
            - email: str
            - role: str [administrator|editor|reader]
            Return newly created invitation (issuer and document are automatically set)

        PATCH /api/v1/documents/<document_id>/invitations/:<invitation_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document invitation

        DELETE  /api/v1/documents/<document_id>/invitations/<invitation_id>/
            Delete targeted invitation
      parameters:
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /api/v1.0/documents/{resource_id}/invitations/{id}/:
    get:
      operationId: api_v1.0_documents_invitations_retrieve
      description: |-
        API ViewSet for user invitations to document.

        GET /api/v1/documents/<document_id>/invitations/:<invitation_id>/
            Return list of invitations related to that document or one
            document access if an id is provided.

        POST /api/v1/documents/<document_id>/invitations/ with expected data:
            - email: str
            - role: str [administrator|editor|reader]
            Return newly created invitation (issuer and document are automatically set)

        PATCH /api/v1/documents/<document_id>/invitations/:<invitation_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document invitation

        DELETE  /api/v1/documents/<document_id>/invitations/<invitation_id>/
            Delete targeted invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    put:
      operationId: api_v1.0_documents_invitations_update
      description: |-
        API ViewSet for user invitations to document.

        GET /api/v1/documents/<document_id>/invitations/:<invitation_id>/
            Return list of invitations related to that document or one
            document access if an id is provided.

        POST /api/v1/documents/<document_id>/invitations/ with expected data:
            - email: str
            - role: str [administrator|editor|reader]
            Return newly created invitation (issuer and document are automatically set)

        PATCH /api/v1/documents/<document_id>/invitations/:<invitation_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document invitation

        DELETE  /api/v1/documents/<document_id>/invitations/<invitation_id>/
            Delete targeted invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvitationRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    patch:
      operationId: api_v1.0_documents_invitations_partial_update
      description: |-
        API ViewSet for user invitations to document.

        GET /api/v1/documents/<document_id>/invitations/:<invitation_id>/
            Return list of invitations related to that document or one
            document access if an id is provided.

        POST /api/v1/documents/<document_id>/invitations/ with expected data:
            - email: str
            - role: str [administrator|editor|reader]
            Return newly created invitation (issuer and document are automatically set)

        PATCH /api/v1/documents/<document_id>/invitations/:<invitation_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document invitation

        DELETE  /api/v1/documents/<document_id>/invitations/<invitation_id>/
            Delete targeted invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvitationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvitationRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    delete:
      operationId: api_v1.0_documents_invitations_destroy
      description: |-
        API ViewSet for user invitations to document.

        GET /api/v1/documents/<document_id>/invitations/:<invitation_id>/
            Return list of invitations related to that document or one
            document access if an id is provided.

        POST /api/v1/documents/<document_id>/invitations/ with expected data:
            - email: str
            - role: str [administrator|editor|reader]
            Return newly created invitation (issuer and document are automatically set)

        PATCH /api/v1/documents/<document_id>/invitations/:<invitation_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated document invitation

        DELETE  /api/v1/documents/<document_id>/invitations/<invitation_id>/
            Delete targeted invitation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1.0/documents/create-for-owner/:
    post:
      operationId: api_v1.0_documents_create_for_owner_create
      description: Create a document on behalf of a specified owner (pre-existing
        user or invited).
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/favorite_list/:
    get:
      operationId: api_v1.0_documents_favorite_list_retrieve
      description: Get list of favorite documents for the current user.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/media-auth/:
    get:
      operationId: api_v1.0_documents_media_auth_retrieve
      description: |-
        This view is used by an Nginx subrequest to control access to a document's
        attachment file.

        When we let the request go through, we compute authorization headers that will be added to
        the request going through thanks to the nginx.ingress.kubernetes.io/auth-response-headers
        annotation. The request will then be proxied to the object storage backend who will
        respond with the file after checking the signature included in headers.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1.0/documents/trashbin/:
    get:
      operationId: api_v1.0_documents_trashbin_retrieve
      description: |-
        Retrieve soft-deleted documents for which the current user has the owner role.

        The selected documents are those deleted within the cutoff period defined in the
        settings (see TRASHBIN_CUTOFF_DAYS), before they are considered permanently deleted.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocument'
          description: ''
  /api/v1.0/footer/:
    get:
      operationId: api_v1.0_footer_retrieve
      description: |-
        GET /api/v1/footer/
            Return the footer JSON.
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1.0/templates/:
    get:
      operationId: api_v1.0_templates_list
      description: Restrict templates returned by the list endpoint
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTemplateList'
          description: ''
    post:
      operationId: api_v1.0_templates_create
      description: Template ViewSet
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
  /api/v1.0/templates/{id}/:
    get:
      operationId: api_v1.0_templates_retrieve
      description: Template ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
    put:
      operationId: api_v1.0_templates_update
      description: Template ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
    patch:
      operationId: api_v1.0_templates_partial_update
      description: Template ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTemplateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: ''
    delete:
      operationId: api_v1.0_templates_destroy
      description: Template ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1.0/templates/{resource_id}/accesses/:
    get:
      operationId: api_v1.0_templates_accesses_list
      description: |-
        API ViewSet for all interactions with template accesses.

        GET /api/v1/templates/<template_id>/accesses/:<template_access_id>
            Return list of all template accesses related to the logged-in user or one
            template access if an id is provided.

        POST /api/v1/templates/<template_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created template access

        PUT /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated template access

        PATCH /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated template access

        DELETE /api/v1/templates/<template_id>/accesses/<template_access_id>/
            Delete targeted template access
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTemplateAccessList'
          description: ''
    post:
      operationId: api_v1.0_templates_accesses_create
      description: |-
        API ViewSet for all interactions with template accesses.

        GET /api/v1/templates/<template_id>/accesses/:<template_access_id>
            Return list of all template accesses related to the logged-in user or one
            template access if an id is provided.

        POST /api/v1/templates/<template_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created template access

        PUT /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated template access

        PATCH /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated template access

        DELETE /api/v1/templates/<template_id>/accesses/<template_access_id>/
            Delete targeted template access
      parameters:
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateAccessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TemplateAccessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateAccessRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAccess'
          description: ''
  /api/v1.0/templates/{resource_id}/accesses/{id}/:
    get:
      operationId: api_v1.0_templates_accesses_retrieve
      description: |-
        API ViewSet for all interactions with template accesses.

        GET /api/v1/templates/<template_id>/accesses/:<template_access_id>
            Return list of all template accesses related to the logged-in user or one
            template access if an id is provided.

        POST /api/v1/templates/<template_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created template access

        PUT /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated template access

        PATCH /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated template access

        DELETE /api/v1/templates/<template_id>/accesses/<template_access_id>/
            Delete targeted template access
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAccess'
          description: ''
    put:
      operationId: api_v1.0_templates_accesses_update
      description: |-
        API ViewSet for all interactions with template accesses.

        GET /api/v1/templates/<template_id>/accesses/:<template_access_id>
            Return list of all template accesses related to the logged-in user or one
            template access if an id is provided.

        POST /api/v1/templates/<template_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created template access

        PUT /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated template access

        PATCH /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated template access

        DELETE /api/v1/templates/<template_id>/accesses/<template_access_id>/
            Delete targeted template access
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateAccessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TemplateAccessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateAccessRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAccess'
          description: ''
    patch:
      operationId: api_v1.0_templates_accesses_partial_update
      description: |-
        API ViewSet for all interactions with template accesses.

        GET /api/v1/templates/<template_id>/accesses/:<template_access_id>
            Return list of all template accesses related to the logged-in user or one
            template access if an id is provided.

        POST /api/v1/templates/<template_id>/accesses/ with expected data:
            - user: str
            - role: str [administrator|editor|reader]
            Return newly created template access

        PUT /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return updated template access

        PATCH /api/v1/templates/<template_id>/accesses/<template_access_id>/ with expected data:
            - role: str [owner|admin|editor|reader]
            Return partially updated template access

        DELETE /api/v1/templates/<template_id>/accesses/<template_access_id>/
            Delete targeted template access
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTemplateAccessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTemplateAccessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTemplateAccessRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAccess'
          description: ''
    delete:
      operationId: api_v1.0_templates_accesses_destroy
      description: Forbid deleting the last owner access
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: primary key for the record as UUID
        required: true
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: ^[0-9a-z-]*$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1.0/users/:
    get:
      operationId: api_v1.0_users_list
      description: List users based on search query. Results are limited and filtered
        by email similarity.
      summary: List users
      parameters:
      - in: query
        name: document_id
        schema:
          type: string
        description: Exclude users already in this document
      - in: query
        name: q
        schema:
          type: string
        description: Search query (minimum 5 characters)
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v1.0/users/{id}/:
    put:
      operationId: api_v1.0_users_update
      description: Update user information. Only allowed for the user themselves.
      summary: Update user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1.0_users_partial_update
      description: Update specific user fields. Only allowed for the user themselves.
      summary: Partially update user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1.0/users/me/:
    get:
      operationId: api_v1.0_users_me_retrieve
      description: Return information on currently logged user
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /dashboard/api/user-signups/:
    get:
      operationId: dashboard_api_user_signups_list
      tags:
      - dashboard
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSignupStats'
          description: ''
  /integrations/apps/:
    get:
      operationId: integrations_apps_list
      description: List all supported app integrations.
      tags:
      - App Integrations
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupportedApp'
          description: ''
  /integrations/gdrive/docs/markdown/:
    post:
      operationId: integrations_gdrive_docs_markdown_create
      description: Create a Google Doc from markdown content.
      tags:
      - Google Drive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleDocFromMarkdownRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleDocFromMarkdownRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleDocFromMarkdownRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDocFromMarkdownResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
          description: ''
        '502':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
          description: ''
  /integrations/gdrive/download/{file_id}/:
    get:
      operationId: integrations_gdrive_download_retrieve
      description: Download a file from Google Drive by ID.
      parameters:
      - in: path
        name: file_id
        schema:
          type: string
        required: true
      tags:
      - Google Drive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDriveDownloadResponse'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '502':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
          description: ''
  /integrations/gdrive/files/:
    get:
      operationId: integrations_gdrive_files_retrieve
      description: List files from user's Google Drive with optional filters.
      tags:
      - Google Drive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDriveListResponse'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '502':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
          description: ''
  /integrations/gdrive/oauth/callback/:
    get:
      operationId: integrations_gdrive_oauth_callback_retrieve
      description: Exchange auth code for access token and store credentials using
        signed state.
      tags:
      - Google Drive
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleOAuthCallback'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /integrations/gdrive/oauth/start/:
    get:
      operationId: integrations_gdrive_oauth_start_retrieve
      description: Redirect user to Google OAuth consent screen with signed state.
      tags:
      - Google Drive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleOAuthStartResponse'
          description: ''
  /integrations/gdrive/revoke/:
    post:
      operationId: integrations_gdrive_revoke_create
      description: Removes the ConnectedApp record and revokes token from Google.
      summary: Revoke Google Drive access
      tags:
      - Google Drive
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDriveRevokeResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /integrations/gdrive/upload/:
    post:
      operationId: integrations_gdrive_upload_create
      description: Upload a file to user's Google Drive.
      tags:
      - Google Drive
      requestBody:
        content:
          multipart/form-data:
            schema:
              file:
                type: string
                format: binary
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleDriveUploadResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '502':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
          description: ''
  /opie/api/v1/agents/:
    get:
      operationId: opie_api_v1_agents_list
      description: |-
        API endpoint that allows managing agents.
        Returns:
        - All agents if superuser
        - User's agents + global agents for regular users
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Agents
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAgentList'
          description: ''
    post:
      operationId: opie_api_v1_agents_create
      description: |-
        API endpoint that allows managing agents.
        Returns:
        - All agents if superuser
        - User's agents + global agents for regular users
      tags:
      - Agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: ''
  /opie/api/v1/agents/{agent_id}/instructions/:
    get:
      operationId: opie_api_v1_agents_instructions_retrieve
      description: Fetch the instruction assigned directly to the agent (if enabled).
      parameters:
      - in: path
        name: agent_id
        schema:
          type: integer
        required: true
      tags:
      - Agents
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstructionsResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstructionsResponse'
          description: ''
  /opie/api/v1/agents/{id}/:
    get:
      operationId: opie_api_v1_agents_retrieve
      description: |-
        API endpoint that allows managing agents.
        Returns:
        - All agents if superuser
        - User's agents + global agents for regular users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent.
        required: true
      tags:
      - Agents
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: ''
    put:
      operationId: opie_api_v1_agents_update
      description: |-
        API endpoint that allows managing agents.
        Returns:
        - All agents if superuser
        - User's agents + global agents for regular users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent.
        required: true
      tags:
      - Agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgentRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: ''
    patch:
      operationId: opie_api_v1_agents_partial_update
      description: |-
        API endpoint that allows managing agents.
        Returns:
        - All agents if superuser
        - User's agents + global agents for regular users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent.
        required: true
      tags:
      - Agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAgentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAgentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAgentRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
          description: ''
    delete:
      operationId: opie_api_v1_agents_destroy
      description: |-
        API endpoint that allows managing agents.
        Returns:
        - All agents if superuser
        - User's agents + global agents for regular users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent.
        required: true
      tags:
      - Agents
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/categories/:
    get:
      operationId: opie_api_v1_categories_list
      description: API endpoint that allows listing agent categories.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Tags
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
  /opie/api/v1/categories/{id}/:
    get:
      operationId: opie_api_v1_categories_retrieve
      description: API endpoint that allows listing agent categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - Tags
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /opie/api/v1/chat-sessions/:
    get:
      operationId: opie_api_v1_chat_sessions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Opie AI
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatSessionList'
          description: ''
    post:
      operationId: opie_api_v1_chat_sessions_create
      tags:
      - Opie AI
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSessionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatSessionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatSessionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
          description: ''
  /opie/api/v1/chat-sessions/{id}/:
    get:
      operationId: opie_api_v1_chat_sessions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this chat session.
        required: true
      tags:
      - Opie AI
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
          description: ''
    put:
      operationId: opie_api_v1_chat_sessions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this chat session.
        required: true
      tags:
      - Opie AI
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatSessionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatSessionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatSessionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
          description: ''
    patch:
      operationId: opie_api_v1_chat_sessions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this chat session.
        required: true
      tags:
      - Opie AI
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatSessionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatSessionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatSessionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
          description: ''
    delete:
      operationId: opie_api_v1_chat_sessions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this chat session.
        required: true
      tags:
      - Opie AI
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/chat-sessions/{id}/messages/:
    get:
      operationId: opie_api_v1_chat_sessions_messages_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this chat session.
        required: true
      tags:
      - Opie AI
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
          description: ''
  /opie/api/v1/collections/:
    get:
      operationId: opie_api_v1_collections_list
      description: Get a hierarchical list of collections accessible to the user.
        If no collection_uuid provided, returns root contents (folders + files). If
        collection_uuid provided, returns collection contents. ALL results are paginated
        for performance.
      summary: List collections
      parameters:
      - in: query
        name: collection_uuid
        schema:
          type: string
        description: 'Optional: Get contents of specific collection. If not provided,
          returns root contents.'
      - in: query
        name: page
        schema:
          type: integer
        description: 'Page number for pagination (default: 1)'
      - in: query
        name: page_size
        schema:
          type: integer
        description: 'Number of results per page (default: 50, max: 1000)'
      tags:
      - Collections
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        count:
                          type: integer
                          description: Total number of items (folders + files)
                        next:
                          type: string
                          description: URL for next page
                          nullable: true
                        previous:
                          type: string
                          description: URL for previous page
                          nullable: true
                        results:
                          type: object
                          properties:
                            uuid:
                              type: string
                              nullable: true
                            id:
                              type: integer
                              nullable: true
                            name:
                              type: string
                            description:
                              type: string
                            collection_type:
                              type: string
                            children:
                              type: array
                              description: Paginated sub-folders
                            files:
                              type: array
                              description: Paginated files
                            full_path:
                              type: string
          description: ''
    post:
      operationId: opie_api_v1_collections_create
      description: API endpoint for managing hierarchical collections (folders).
      tags:
      - Collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /opie/api/v1/collections/{uuid}/:
    get:
      operationId: opie_api_v1_collections_retrieve
      description: Get detailed information about a collection including files and
        subcollections
      summary: Get collection details
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Collections
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionDetail'
          description: ''
    put:
      operationId: opie_api_v1_collections_update
      description: API endpoint for managing hierarchical collections (folders).
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    patch:
      operationId: opie_api_v1_collections_partial_update
      description: API endpoint for managing hierarchical collections (folders).
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollectionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    delete:
      operationId: opie_api_v1_collections_destroy
      description: API endpoint for managing hierarchical collections (folders).
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Collections
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/collections/{uuid}/add-files/:
    post:
      operationId: opie_api_v1_collections_add_files_create
      description: Add existing files to a collection
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /opie/api/v1/collections/{uuid}/delete/:
    delete:
      operationId: opie_api_v1_collections_delete_destroy
      description: Delete a collection and optionally handle its contents
      summary: Delete collection
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Collections
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /opie/api/v1/collections/{uuid}/move-to/:
    post:
      operationId: opie_api_v1_collections_move_to_create
      description: Move this collection to a different parent collection
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /opie/api/v1/collections/{uuid}/reorder-files/:
    post:
      operationId: opie_api_v1_collections_reorder_files_create
      description: Reorder files within a collection
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /opie/api/v1/collections/create-folder/:
    post:
      operationId: opie_api_v1_collections_create_folder_create
      description: Create a new folder or collection, optionally within a parent collection
      summary: Create folder/collection
      tags:
      - Collections
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the folder/collection
                parent_uuid:
                  type: string
                  description: 'Optional: UUID of parent collection. If not provided,
                    creates at root level.'
                description:
                  type: string
                  description: Optional description of the folder/collection
                collection_type:
                  type: string
                  enum:
                  - folder
                  - regulation
                  - act
                  - guideline
                  - manual
                  description: 'Type of collection (default: folder)'
              required:
              - name
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /opie/api/v1/collections/tree/:
    get:
      operationId: opie_api_v1_collections_tree_retrieve
      description: Get the complete collection tree structure
      tags:
      - Collections
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /opie/api/v1/expected-output/:
    get:
      operationId: opie_api_v1_expected_output_list
      description: API endpoint that allows managing agent expected outputs.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Agent Expected Output
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAgentExpectedOutputList'
          description: ''
    post:
      operationId: opie_api_v1_expected_output_create
      description: API endpoint that allows managing agent expected outputs.
      tags:
      - Agent Expected Output
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentExpectedOutputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgentExpectedOutputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgentExpectedOutputRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentExpectedOutput'
          description: ''
  /opie/api/v1/expected-output/{id}/:
    get:
      operationId: opie_api_v1_expected_output_retrieve
      description: API endpoint that allows managing agent expected outputs.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent expected output.
        required: true
      tags:
      - Agent Expected Output
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentExpectedOutput'
          description: ''
    put:
      operationId: opie_api_v1_expected_output_update
      description: API endpoint that allows managing agent expected outputs.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent expected output.
        required: true
      tags:
      - Agent Expected Output
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentExpectedOutputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgentExpectedOutputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgentExpectedOutputRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentExpectedOutput'
          description: ''
    patch:
      operationId: opie_api_v1_expected_output_partial_update
      description: API endpoint that allows managing agent expected outputs.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent expected output.
        required: true
      tags:
      - Agent Expected Output
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAgentExpectedOutputRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAgentExpectedOutputRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAgentExpectedOutputRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentExpectedOutput'
          description: ''
    delete:
      operationId: opie_api_v1_expected_output_destroy
      description: API endpoint that allows managing agent expected outputs.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent expected output.
        required: true
      tags:
      - Agent Expected Output
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/file-tags/:
    get:
      operationId: opie_api_v1_file_tags_list
      description: API endpoint that allows managing file tags.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - File Tags
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileTagList'
          description: ''
    post:
      operationId: opie_api_v1_file_tags_create
      description: API endpoint that allows managing file tags.
      tags:
      - File Tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileTagRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTag'
          description: ''
  /opie/api/v1/file-tags/{id}/:
    get:
      operationId: opie_api_v1_file_tags_retrieve
      description: API endpoint that allows managing file tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file tag.
        required: true
      tags:
      - File Tags
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTag'
          description: ''
    put:
      operationId: opie_api_v1_file_tags_update
      description: API endpoint that allows managing file tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file tag.
        required: true
      tags:
      - File Tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileTagRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTag'
          description: ''
    patch:
      operationId: opie_api_v1_file_tags_partial_update
      description: API endpoint that allows managing file tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file tag.
        required: true
      tags:
      - File Tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFileTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFileTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileTagRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTag'
          description: ''
    delete:
      operationId: opie_api_v1_file_tags_destroy
      description: API endpoint that allows managing file tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file tag.
        required: true
      tags:
      - File Tags
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/files/:
    get:
      operationId: opie_api_v1_files_list
      description: API endpoint that allows managing files.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileList'
          description: ''
    post:
      operationId: opie_api_v1_files_create
      description: |-
        Upload one or more files to the system.

        Features:
        - Single or multiple file upload
        - Optional auto-ingestion into knowledge base
        - Team and visibility settings
        - Global library uploads (superadmins only)

        Supported file types: PDF, DOCX, TXT, CSV, JSON
      summary: Upload files
      tags:
      - opie
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: One or more files to upload
                title:
                  type: string
                  description: Optional title for the files (defaults to filename)
                description:
                  type: string
                  description: Optional description for the files
                team:
                  type: integer
                  description: Optional team ID
                auto_ingest:
                  type: boolean
                  description: Whether to automatically ingest the files
                is_global:
                  type: boolean
                  description: Upload to global library (superadmins only)
                knowledgebase_id:
                  type: string
                  description: Required if auto_ingest is True
                is_ephemeral:
                  type: boolean
                  description: Whether the file is ephemeral
              required:
              - files
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /opie/api/v1/files/{uuid}/:
    get:
      operationId: opie_api_v1_files_retrieve
      description: API endpoint that allows managing files.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    put:
      operationId: opie_api_v1_files_update
      description: API endpoint that allows managing files.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    patch:
      operationId: opie_api_v1_files_partial_update
      description: API endpoint that allows managing files.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    delete:
      operationId: opie_api_v1_files_destroy
      description: API endpoint that allows managing files.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/files/{uuid}/reingest/:
    post:
      operationId: opie_api_v1_files_reingest_create
      description: Manually trigger re-ingestion of a file into all its linked knowledge
        bases.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
  /opie/api/v1/files/{uuid}/update-progress/:
    post:
      operationId: opie_api_v1_files_update_progress_create
      description: |-
        Update ingestion progress for a file.
        Called by the Cloud Run ingestion service.
        Requires API key authentication.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
  /opie/api/v1/files/bulk-delete-and-unlink/:
    post:
      operationId: opie_api_v1_files_bulk_delete_and_unlink_create
      description: |-
        Bulk delete files and unlink them from all knowledge bases.
        Accepts the same input as unlink_from_kb: {"file_ids": [...], "knowledgebase_ids": [...]}
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
  /opie/api/v1/files/ingest-selected/:
    post:
      operationId: opie_api_v1_files_ingest_selected_create
      description: Manually ingest selected files into multiple knowledge bases.
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileIngestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileIngestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileIngestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileIngest'
          description: ''
  /opie/api/v1/files/link-to-kb/:
    post:
      operationId: opie_api_v1_files_link_to_kb_create
      description: |-
        Link files to knowledge bases without ingestion.
        Simply creates the links in the database.
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
  /opie/api/v1/files/list/:
    get:
      operationId: opie_api_v1_files_list_list
      description: |-
        List all accessible files with their associated knowledge bases.

        Features:
        - File metadata
        - Associated knowledge bases
        - Creation and update timestamps

        The results are paginated and can be filtered by type and keywords.
      summary: List files
      parameters:
      - in: query
        name: keywords
        schema:
          type: string
        description: Search files by name or description
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results per page
      - in: query
        name: type
        schema:
          type: string
        description: Filter by file type (pdf, docx, txt, etc.)
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileList'
          description: ''
  /opie/api/v1/files/list-with-kbs/:
    get:
      operationId: opie_api_v1_files_list_with_kbs_list
      description: |-
        List all files with their associated knowledge bases.

        Features:
        - File metadata
        - Associated knowledge bases
        - Creation and update timestamps

        The results are paginated and can be filtered by type and search query.
      summary: List files with knowledge base information
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results per page
      - in: query
        name: search
        schema:
          type: string
        description: Search files by name
      - in: query
        name: type
        schema:
          type: string
        description: Filter by file type (pdf, docx, txt, etc.)
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileList'
          description: ''
  /opie/api/v1/files/move-to-collection/:
    post:
      operationId: opie_api_v1_files_move_to_collection_create
      description: Move one or more files to a different collection
      summary: Move files between collections
      tags:
      - Files
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_ids:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: List of file UUIDs to move
                target_collection_id:
                  type: integer
                  description: ID of the target collection (null to move to root level)
              required:
              - file_ids
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /opie/api/v1/files/unlink-from-kb/:
    post:
      operationId: opie_api_v1_files_unlink_from_kb_create
      description: |-
        Remove files from knowledge bases by deleting their FileKnowledgeBaseLink entries.

        Features:
        - Remove multiple files from multiple knowledge bases in one request
        - Detailed success and error reporting
        - Idempotent operation (safe to retry)

        The files themselves are not deleted, only their association with the knowledge bases.
      summary: Unlink files from knowledge bases
      tags:
      - Files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileIngestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileIngestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileIngestRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Summary message
                  results:
                    type: object
                    properties:
                      unlinked:
                        type: array
                        items:
                          type: object
                          properties:
                            file_uuid:
                              type: string
                              format: uuid
                            file_name:
                              type: string
                            kb_id:
                              type: string
                            kb_name:
                              type: string
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            file_uuid:
                              type: string
                              format: uuid
                            file_name:
                              type: string
                            kb_id:
                              type: string
                            error:
                              type: string
                example:
                  message: Unlinked 2 file-knowledge base combinations
                  results:
                    unlinked:
                    - file_uuid: 123e4567-e89b-12d3-a456-426614174000
                      file_name: document1.pdf
                      kb_id: kb-123
                      kb_name: My Knowledge Base
                    errors:
                    - file_uuid: 123e4567-e89b-12d3-a456-426614174001
                      file_name: document2.pdf
                      kb_id: kb-456
                      error: Link does not exist
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /opie/api/v1/global-instructions/:
    get:
      operationId: opie_api_v1_global_instructions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Global Instruction Templates
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAgentInstructionList'
          description: ''
  /opie/api/v1/global-instructions/{id}/:
    get:
      operationId: opie_api_v1_global_instructions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent instruction.
        required: true
      tags:
      - Global Instruction Templates
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstruction'
          description: ''
  /opie/api/v1/global-outputs/:
    get:
      operationId: opie_api_v1_global_outputs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Global Expected Output Templates
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAgentExpectedOutputList'
          description: ''
  /opie/api/v1/global-outputs/{id}/:
    get:
      operationId: opie_api_v1_global_outputs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent expected output.
        required: true
      tags:
      - Global Expected Output Templates
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentExpectedOutput'
          description: ''
  /opie/api/v1/instructions/:
    get:
      operationId: opie_api_v1_instructions_list
      description: API endpoint that allows managing agent instructions.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Agent Instructions
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAgentInstructionList'
          description: ''
    post:
      operationId: opie_api_v1_instructions_create
      description: API endpoint that allows managing agent instructions.
      tags:
      - Agent Instructions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentInstructionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgentInstructionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgentInstructionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstruction'
          description: ''
  /opie/api/v1/instructions/{id}/:
    get:
      operationId: opie_api_v1_instructions_retrieve
      description: API endpoint that allows managing agent instructions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent instruction.
        required: true
      tags:
      - Agent Instructions
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstruction'
          description: ''
    put:
      operationId: opie_api_v1_instructions_update
      description: API endpoint that allows managing agent instructions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent instruction.
        required: true
      tags:
      - Agent Instructions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentInstructionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgentInstructionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgentInstructionRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstruction'
          description: ''
    patch:
      operationId: opie_api_v1_instructions_partial_update
      description: API endpoint that allows managing agent instructions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent instruction.
        required: true
      tags:
      - Agent Instructions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAgentInstructionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAgentInstructionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAgentInstructionRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInstruction'
          description: ''
    delete:
      operationId: opie_api_v1_instructions_destroy
      description: API endpoint that allows managing agent instructions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this agent instruction.
        required: true
      tags:
      - Agent Instructions
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/knowledge-base/pdf-urls/:
    get:
      operationId: opie_api_v1_knowledge_base_pdf_urls_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedKnowledgeBasePdfURLList'
          description: ''
    post:
      operationId: opie_api_v1_knowledge_base_pdf_urls_create
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBasePdfURLRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KnowledgeBasePdfURLRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KnowledgeBasePdfURLRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasePdfURL'
          description: ''
  /opie/api/v1/knowledge-base/pdf-urls/{id}/:
    get:
      operationId: opie_api_v1_knowledge_base_pdf_urls_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base pdf url.
        required: true
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasePdfURL'
          description: ''
    put:
      operationId: opie_api_v1_knowledge_base_pdf_urls_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base pdf url.
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBasePdfURLRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KnowledgeBasePdfURLRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KnowledgeBasePdfURLRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasePdfURL'
          description: ''
    patch:
      operationId: opie_api_v1_knowledge_base_pdf_urls_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base pdf url.
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeBasePdfURLRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeBasePdfURLRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeBasePdfURLRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasePdfURL'
          description: ''
    delete:
      operationId: opie_api_v1_knowledge_base_pdf_urls_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base pdf url.
        required: true
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/knowledge-bases/:
    get:
      operationId: opie_api_v1_knowledge_bases_list
      description: List files with optional filename filtering (search) and dynamic
        pagination size (pageitem).
      summary: List files
      parameters:
      - in: query
        name: file_id
        schema:
          type: string
        description: Optional file UUID to check if it's linked to each knowledge
          base
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results per page
      - in: query
        name: pageitem
        schema:
          type: integer
        description: Number of results per page (pagination size)
      - in: query
        name: search
        schema:
          type: string
        description: Filter files by filename (case-insensitive, partial match)
      tags:
      - Knowledge Bases
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        count:
                          type: integer
                          description: Total number of items
                        next:
                          type: string
                          description: URL for next page
                          nullable: true
                        previous:
                          type: string
                          description: URL for previous page
                          nullable: true
                        results:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              knowledgebase_id:
                                type: string
                              name:
                                type: string
                              description:
                                type: string
                              model_provider:
                                type: integer
                              chunk_size:
                                type: integer
                              chunk_overlap:
                                type: integer
                              vector_table_name:
                                type: string
                              created_at:
                                type: string
                                format: date-time
                              updated_at:
                                type: string
                                format: date-time
                              is_file_linked:
                                type: boolean
                                nullable: true
          description: ''
    post:
      operationId: opie_api_v1_knowledge_bases_create
      tags:
      - Knowledge Bases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
  /opie/api/v1/knowledge-bases/{id}/:
    get:
      operationId: opie_api_v1_knowledge_bases_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base.
        required: true
      tags:
      - Knowledge Bases
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
    put:
      operationId: opie_api_v1_knowledge_bases_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base.
        required: true
      tags:
      - Knowledge Bases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
    patch:
      operationId: opie_api_v1_knowledge_bases_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base.
        required: true
      tags:
      - Knowledge Bases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeBaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeBaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeBaseRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
    delete:
      operationId: opie_api_v1_knowledge_bases_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base.
        required: true
      tags:
      - Knowledge Bases
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/knowledge-bases/{id}/files/:
    get:
      operationId: opie_api_v1_knowledge_bases_files_list
      description: |-
        List all files that have been ingested or are being ingested into this knowledge base.

        Features:
        - Detailed file metadata
        - Processing status and progress
        - Chunking information
        - Error details if ingestion failed

        The results are paginated and can be filtered by status and search query.
      summary: List files in knowledge base
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base.
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results per page
      - in: query
        name: search
        schema:
          type: string
        description: Search files by title or description
      - in: query
        name: status
        schema:
          type: string
        description: Filter by ingestion status (not_started, processing, completed,
          failed)
      tags:
      - Knowledge Bases
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileKnowledgeBaseLinkList'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Knowledge base not found
          description: ''
  /opie/api/v1/knowledge-bases/{id}/share-to-teams/:
    post:
      operationId: opie_api_v1_knowledge_bases_share_to_teams_create
      description: |-
        Share this knowledge base with other teams by adding team IDs.
        Only the owner (uploaded_by) or a superuser can share.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this knowledge base.
        required: true
      tags:
      - Knowledge Bases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBase'
          description: ''
  /opie/api/v1/model-providers/:
    get:
      operationId: opie_api_v1_model_providers_list
      description: Returns a list of enabled model providers.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Agent Model Providers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedModelProviderList'
          description: ''
  /opie/api/v1/model-providers/{id}/:
    get:
      operationId: opie_api_v1_model_providers_retrieve
      description: Returns a list of enabled model providers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this model provider.
        required: true
      tags:
      - Agent Model Providers
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelProvider'
          description: ''
  /opie/api/v1/projects/:
    get:
      operationId: opie_api_v1_projects_list
      description: API endpoint that allows managing projects.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: opie_api_v1_projects_create
      description: API endpoint that allows managing projects.
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /opie/api/v1/projects/{uuid}/:
    get:
      operationId: opie_api_v1_projects_retrieve
      description: API endpoint that allows managing projects.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: opie_api_v1_projects_update
      description: API endpoint that allows managing projects.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: opie_api_v1_projects_partial_update
      description: API endpoint that allows managing projects.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: opie_api_v1_projects_destroy
      description: API endpoint that allows managing projects.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Projects
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/storage-buckets/:
    get:
      operationId: opie_api_v1_storage_buckets_list
      description: API endpoint that allows managing storage buckets.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Storage Buckets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStorageBucketList'
          description: ''
    post:
      operationId: opie_api_v1_storage_buckets_create
      description: API endpoint that allows managing storage buckets.
      tags:
      - Storage Buckets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageBucketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StorageBucketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StorageBucketRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageBucket'
          description: ''
  /opie/api/v1/storage-buckets/{id}/:
    get:
      operationId: opie_api_v1_storage_buckets_retrieve
      description: API endpoint that allows managing storage buckets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this storage bucket.
        required: true
      tags:
      - Storage Buckets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageBucket'
          description: ''
    put:
      operationId: opie_api_v1_storage_buckets_update
      description: API endpoint that allows managing storage buckets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this storage bucket.
        required: true
      tags:
      - Storage Buckets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageBucketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StorageBucketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StorageBucketRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageBucket'
          description: ''
    patch:
      operationId: opie_api_v1_storage_buckets_partial_update
      description: API endpoint that allows managing storage buckets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this storage bucket.
        required: true
      tags:
      - Storage Buckets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStorageBucketRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStorageBucketRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStorageBucketRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageBucket'
          description: ''
    delete:
      operationId: opie_api_v1_storage_buckets_destroy
      description: API endpoint that allows managing storage buckets.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this storage bucket.
        required: true
      tags:
      - Storage Buckets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/tags/:
    get:
      operationId: opie_api_v1_tags_list
      description: API endpoint that allows managing tags.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: opie_api_v1_tags_create
      description: API endpoint that allows managing tags.
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /opie/api/v1/tags/{id}/:
    get:
      operationId: opie_api_v1_tags_retrieve
      description: API endpoint that allows managing tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: opie_api_v1_tags_update
      description: API endpoint that allows managing tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: opie_api_v1_tags_partial_update
      description: API endpoint that allows managing tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: opie_api_v1_tags_destroy
      description: API endpoint that allows managing tags.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/templates/:
    get:
      operationId: opie_api_v1_templates_retrieve
      description: Returns global instruction templates and expected output templates.
      tags:
      - Agent Templates
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalTemplatesResponse'
          description: ''
  /opie/api/v1/user-feedback/:
    get:
      operationId: opie_api_v1_user_feedback_list
      description: API endpoint for submitting and viewing user feedback on chat sessions.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserFeedbackList'
          description: ''
    post:
      operationId: opie_api_v1_user_feedback_create
      description: API endpoint for submitting and viewing user feedback on chat sessions.
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFeedbackRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserFeedbackRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserFeedbackRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeedback'
          description: ''
  /opie/api/v1/user-feedback/{id}/:
    get:
      operationId: opie_api_v1_user_feedback_retrieve
      description: API endpoint for submitting and viewing user feedback on chat sessions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user feedback.
        required: true
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeedback'
          description: ''
    put:
      operationId: opie_api_v1_user_feedback_update
      description: API endpoint for submitting and viewing user feedback on chat sessions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user feedback.
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFeedbackRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserFeedbackRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserFeedbackRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeedback'
          description: ''
    patch:
      operationId: opie_api_v1_user_feedback_partial_update
      description: API endpoint for submitting and viewing user feedback on chat sessions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user feedback.
        required: true
      tags:
      - opie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserFeedbackRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserFeedbackRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserFeedbackRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeedback'
          description: ''
    delete:
      operationId: opie_api_v1_user_feedback_destroy
      description: API endpoint for submitting and viewing user feedback on chat sessions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user feedback.
        required: true
      tags:
      - opie
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/vault-files/:
    get:
      operationId: opie_api_v1_vault_files_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Files
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVaultFileList'
          description: ''
    post:
      operationId: opie_api_v1_vault_files_create
      description: Upload a file to the vault. Requires multipart/form-data.
      summary: Upload a vault file
      tags:
      - Files
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaultFileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultFile'
          description: ''
  /opie/api/v1/vault-files/{id}/:
    get:
      operationId: opie_api_v1_vault_files_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vault File.
        required: true
      tags:
      - Files
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultFile'
          description: ''
    put:
      operationId: opie_api_v1_vault_files_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vault File.
        required: true
      tags:
      - Files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultFileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaultFileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaultFileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultFile'
          description: ''
    patch:
      operationId: opie_api_v1_vault_files_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vault File.
        required: true
      tags:
      - Files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVaultFileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVaultFileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVaultFileRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultFile'
          description: ''
    delete:
      operationId: opie_api_v1_vault_files_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vault File.
        required: true
      tags:
      - Files
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /opie/api/v1/vault-files/{id}/share/:
    post:
      operationId: opie_api_v1_vault_files_share_create
      description: Share this vault file with users or teams.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vault File.
        required: true
      tags:
      - Files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultFileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaultFileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaultFileRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultFile'
          description: ''
  /opie/api/v1/vault-files/by-project/:
    get:
      operationId: opie_api_v1_vault_files_by_project_retrieve
      description: 'Get all vault files by project UUID. Usage: /vault-files/by-project/?project_uuid=<uuid>'
      tags:
      - Files
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultFile'
          description: ''
  /teams/api/teams/:
    get:
      operationId: teams_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - teams
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamList'
          description: ''
    post:
      operationId: teams_create
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /teams/api/teams/{id}/:
    get:
      operationId: teams_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    put:
      operationId: teams_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    patch:
      operationId: teams_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeamRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeamRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeamRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    delete:
      operationId: teams_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /teams/api/user-invitations/:
    get:
      operationId: user_invitations
      tags:
      - teams
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationsResponse'
          description: ''
components:
  schemas:
    AITranslate:
      type: object
      description: Serializer for AI translate requests.
      properties:
        language:
          $ref: '#/components/schemas/AITranslateLanguageEnum'
        text:
          type: string
      required:
      - language
      - text
    AITranslateLanguageEnum:
      enum:
      - af
      - ar
      - ar-dz
      - ast
      - az
      - bg
      - be
      - bn
      - br
      - bs
      - ca
      - ckb
      - cs
      - cy
      - da
      - de
      - dsb
      - el
      - en
      - en-au
      - en-gb
      - eo
      - es
      - es-ar
      - es-co
      - es-mx
      - es-ni
      - es-ve
      - et
      - eu
      - fa
      - fi
      - fr
      - fy
      - ga
      - gd
      - gl
      - he
      - hi
      - hr
      - hsb
      - hu
      - hy
      - ia
      - id
      - ig
      - io
      - is
      - it
      - ja
      - ka
      - kab
      - kk
      - km
      - kn
      - ko
      - ky
      - lb
      - lt
      - lv
      - mk
      - ml
      - mn
      - mr
      - ms
      - my
      - nb
      - ne
      - nl
      - nn
      - os
      - pa
      - pl
      - pt
      - pt-br
      - ro
      - ru
      - sk
      - sl
      - sq
      - sr
      - sr-latn
      - sv
      - sw
      - ta
      - te
      - tg
      - th
      - tk
      - tr
      - tt
      - udm
      - ug
      - uk
      - ur
      - uz
      - vi
      - zh-hans
      - zh-hant
      type: string
      description: |-
        * `af` - Afrikaans
        * `ar` - Arabic
        * `ar-dz` - Algerian Arabic
        * `ast` - Asturian
        * `az` - Azerbaijani
        * `bg` - Bulgarian
        * `be` - Belarusian
        * `bn` - Bengali
        * `br` - Breton
        * `bs` - Bosnian
        * `ca` - Catalan
        * `ckb` - Central Kurdish (Sorani)
        * `cs` - Czech
        * `cy` - Welsh
        * `da` - Danish
        * `de` - German
        * `dsb` - Lower Sorbian
        * `el` - Greek
        * `en` - English
        * `en-au` - Australian English
        * `en-gb` - British English
        * `eo` - Esperanto
        * `es` - Spanish
        * `es-ar` - Argentinian Spanish
        * `es-co` - Colombian Spanish
        * `es-mx` - Mexican Spanish
        * `es-ni` - Nicaraguan Spanish
        * `es-ve` - Venezuelan Spanish
        * `et` - Estonian
        * `eu` - Basque
        * `fa` - Persian
        * `fi` - Finnish
        * `fr` - French
        * `fy` - Frisian
        * `ga` - Irish
        * `gd` - Scottish Gaelic
        * `gl` - Galician
        * `he` - Hebrew
        * `hi` - Hindi
        * `hr` - Croatian
        * `hsb` - Upper Sorbian
        * `hu` - Hungarian
        * `hy` - Armenian
        * `ia` - Interlingua
        * `id` - Indonesian
        * `ig` - Igbo
        * `io` - Ido
        * `is` - Icelandic
        * `it` - Italian
        * `ja` - Japanese
        * `ka` - Georgian
        * `kab` - Kabyle
        * `kk` - Kazakh
        * `km` - Khmer
        * `kn` - Kannada
        * `ko` - Korean
        * `ky` - Kyrgyz
        * `lb` - Luxembourgish
        * `lt` - Lithuanian
        * `lv` - Latvian
        * `mk` - Macedonian
        * `ml` - Malayalam
        * `mn` - Mongolian
        * `mr` - Marathi
        * `ms` - Malay
        * `my` - Burmese
        * `nb` - Norwegian Bokmål
        * `ne` - Nepali
        * `nl` - Dutch
        * `nn` - Norwegian Nynorsk
        * `os` - Ossetic
        * `pa` - Punjabi
        * `pl` - Polish
        * `pt` - Portuguese
        * `pt-br` - Brazilian Portuguese
        * `ro` - Romanian
        * `ru` - Russian
        * `sk` - Slovak
        * `sl` - Slovenian
        * `sq` - Albanian
        * `sr` - Serbian
        * `sr-latn` - Serbian Latin
        * `sv` - Swedish
        * `sw` - Swahili
        * `ta` - Tamil
        * `te` - Telugu
        * `tg` - Tajik
        * `th` - Thai
        * `tk` - Turkmen
        * `tr` - Turkish
        * `tt` - Tatar
        * `udm` - Udmurt
        * `ug` - Uyghur
        * `uk` - Ukrainian
        * `ur` - Urdu
        * `uz` - Uzbek
        * `vi` - Vietnamese
        * `zh-hans` - Simplified Chinese
        * `zh-hant` - Traditional Chinese
    AITranslateRequest:
      type: object
      description: Serializer for AI translate requests.
      properties:
        language:
          $ref: '#/components/schemas/AITranslateLanguageEnum'
        text:
          type: string
          minLength: 1
      required:
      - language
      - text
    Agent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        agent_id:
          type: string
          readOnly: true
          description: Unique identifier for the agent, used for session storage.
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        category:
          type: integer
          nullable: true
        model:
          type: integer
          nullable: true
          description: AI model used by the agent.
        instructions:
          allOf:
          - $ref: '#/components/schemas/AgentInstruction'
          readOnly: true
        expected_output:
          allOf:
          - $ref: '#/components/schemas/AgentExpectedOutput'
          readOnly: true
        knowledge_base:
          type: string
        search_knowledge:
          type: boolean
        cite_knowledge:
          type: boolean
        add_datetime_to_instructions:
          type: boolean
        show_tool_calls:
          type: boolean
        markdown_enabled:
          type: boolean
        reasoning:
          type: boolean
        debug_mode:
          type: boolean
          description: Enable debug mode for logging.
        num_history_responses:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of past responses to keep in chat memory.
        is_global:
          type: boolean
        team:
          type: integer
          nullable: true
        subscriptions:
          type: array
          items:
            type: integer
            title: ID
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - agent_id
      - created_at
      - expected_output
      - id
      - instructions
      - knowledge_base
      - name
    AgentExpectedOutput:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          description: Optional title for this expected output, e.g., 'Basic Research
            Report'.
          maxLength: 255
        expected_output:
          type: string
        category:
          $ref: '#/components/schemas/CategoryEnum'
        is_enabled:
          type: boolean
        is_global:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        agent:
          type: integer
          nullable: true
      required:
      - created_at
      - expected_output
      - id
      - updated_at
      - user
    AgentExpectedOutputRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: Optional title for this expected output, e.g., 'Basic Research
            Report'.
          maxLength: 255
        expected_output:
          type: string
          minLength: 1
        category:
          $ref: '#/components/schemas/CategoryEnum'
        is_enabled:
          type: boolean
        is_global:
          type: boolean
        user:
          type: integer
        agent:
          type: integer
          nullable: true
      required:
      - expected_output
      - user
    AgentInstruction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          description: Optional title for the instruction, e.g., 'Default Retrieval
            Strategy'.
          maxLength: 255
        instruction:
          type: string
        category:
          $ref: '#/components/schemas/CategoryEnum'
        is_template:
          type: boolean
        is_enabled:
          type: boolean
        is_global:
          type: boolean
        is_system:
          type: boolean
          description: Flag for platform/system-level instructions.
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - created_at
      - id
      - instruction
      - updated_at
      - user
    AgentInstructionRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: Optional title for the instruction, e.g., 'Default Retrieval
            Strategy'.
          maxLength: 255
        instruction:
          type: string
          minLength: 1
        category:
          $ref: '#/components/schemas/CategoryEnum'
        is_template:
          type: boolean
        is_enabled:
          type: boolean
        is_global:
          type: boolean
        is_system:
          type: boolean
          description: Flag for platform/system-level instructions.
        user:
          type: integer
      required:
      - instruction
      - user
    AgentInstructionsResponse:
      type: object
      properties:
        error:
          type: string
        instruction:
          type: string
    AgentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        category:
          type: integer
          nullable: true
        model:
          type: integer
          nullable: true
          description: AI model used by the agent.
        instructions_id:
          type: integer
          writeOnly: true
        custom_instruction:
          type: string
          writeOnly: true
          minLength: 1
        expected_output_id:
          type: integer
          writeOnly: true
        expected_output_data:
          allOf:
          - $ref: '#/components/schemas/AgentExpectedOutputRequest'
          writeOnly: true
        knowledge_base:
          type: string
          minLength: 1
        search_knowledge:
          type: boolean
        cite_knowledge:
          type: boolean
        add_datetime_to_instructions:
          type: boolean
        show_tool_calls:
          type: boolean
        markdown_enabled:
          type: boolean
        reasoning:
          type: boolean
        debug_mode:
          type: boolean
          description: Enable debug mode for logging.
        num_history_responses:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of past responses to keep in chat memory.
        is_global:
          type: boolean
        team:
          type: integer
          nullable: true
        subscriptions:
          type: array
          items:
            type: integer
            title: ID
      required:
      - knowledge_base
      - name
    BlankEnum:
      enum:
      - ''
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
      required:
      - id
      - name
    CategoryEnum:
      enum:
      - Scope & Knowledge Boundaries
      - Information Retrieval & Accuracy
      - Response Handling & Formatting
      - Compliance-Specific Instructions
      - Personality
      - Process
      - Improvement
      - Template
      - User
      - System
      type: string
      description: |-
        * `Scope & Knowledge Boundaries` - Scope & Knowledge Boundaries
        * `Information Retrieval & Accuracy` - Information Retrieval & Accuracy
        * `Response Handling & Formatting` - Response Handling & Formatting
        * `Compliance-Specific Instructions` - Compliance-Specific Instructions
        * `Personality` - Personality
        * `Process` - Process
        * `Improvement` - Improvement
        * `Template` - Template
        * `User` - User-Defined Primary Instruction
        * `System` - System-Level Instruction
    ChatSession:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          minLength: 3
        agent_code:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - agent_code
      - created_at
      - session_id
      - updated_at
    ChatSessionRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 3
        agent_id:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - agent_id
    Collection:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        parent_uuid:
          type: string
          readOnly: true
        collection_type:
          $ref: '#/components/schemas/CollectionTypeEnum'
        jurisdiction:
          type: string
          nullable: true
          maxLength: 100
        regulation_number:
          type: string
          nullable: true
          maxLength: 50
        effective_date:
          type: string
          format: date
          nullable: true
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        children:
          type: string
          readOnly: true
        full_path:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - children
      - created_at
      - full_path
      - id
      - name
      - parent_uuid
      - uuid
    CollectionDetail:
      type: object
      description: Detailed collection serializer with files
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        parent_uuid:
          type: string
          readOnly: true
        collection_type:
          $ref: '#/components/schemas/CollectionTypeEnum'
        jurisdiction:
          type: string
          nullable: true
          maxLength: 100
        regulation_number:
          type: string
          nullable: true
          maxLength: 50
        effective_date:
          type: string
          format: date
          nullable: true
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        children:
          type: string
          readOnly: true
        files:
          type: string
          readOnly: true
        full_path:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - children
      - created_at
      - files
      - full_path
      - id
      - name
      - parent_uuid
      - uuid
    CollectionRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        collection_type:
          $ref: '#/components/schemas/CollectionTypeEnum'
        jurisdiction:
          type: string
          nullable: true
          maxLength: 100
        regulation_number:
          type: string
          nullable: true
          maxLength: 50
        effective_date:
          type: string
          format: date
          nullable: true
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - name
    CollectionTypeEnum:
      enum:
      - folder
      - regulation
      - act
      - guideline
      - manual
      type: string
      description: |-
        * `folder` - Folder
        * `regulation` - Regulation
        * `act` - Act
        * `guideline` - Guideline
        * `manual` - Manual
    Document:
      type: object
      description: Serialize documents with all fields for display in detail views.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: primary key for the record as UUID
        abilities:
          type: object
          additionalProperties: {}
          description: Return abilities of the logged-in user on the instance.
          readOnly: true
        content:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created on
          description: date and time at which a record was created
        creator:
          type: integer
          readOnly: true
          nullable: true
        depth:
          type: integer
          readOnly: true
        excerpt:
          type: string
          nullable: true
          maxLength: 300
        is_favorite:
          type: boolean
          readOnly: true
        link_role:
          allOf:
          - $ref: '#/components/schemas/LinkRoleEnum'
          readOnly: true
        link_reach:
          allOf:
          - $ref: '#/components/schemas/LinkReachEnum'
          readOnly: true
        nb_accesses_ancestors:
          type: integer
          readOnly: true
        nb_accesses_direct:
          type: integer
          readOnly: true
        numchild:
          type: integer
          readOnly: true
        path:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
          description: date and time at which a record was last updated
        user_roles:
          type: string
          readOnly: true
      required:
      - abilities
      - created_at
      - creator
      - depth
      - id
      - is_favorite
      - link_reach
      - link_role
      - nb_accesses_ancestors
      - nb_accesses_direct
      - numchild
      - path
      - updated_at
      - user_roles
    DocumentAccess:
      type: object
      description: Serialize document accesses.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: primary key for the record as UUID
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        team:
          type: string
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleAbdEnum'
        abilities:
          type: object
          additionalProperties: {}
          description: Return abilities of the logged-in user on the instance.
          readOnly: true
      required:
      - abilities
      - id
      - user
    DocumentAccessLight:
      type: object
      description: Serialize document accesses with limited fields.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: primary key for the record as UUID
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        team:
          type: string
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/RoleAbdEnum'
          readOnly: true
        abilities:
          type: object
          additionalProperties: {}
          description: Return abilities of the logged-in user on the instance.
          readOnly: true
      required:
      - abilities
      - id
      - role
      - team
      - user
    DocumentAccessRequest:
      type: object
      description: Serialize document accesses.
      properties:
        user_id:
          type: integer
          writeOnly: true
          nullable: true
        team:
          type: string
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleAbdEnum'
    DocumentRequest:
      type: object
      description: Serialize documents with all fields for display in detail views.
      properties:
        id:
          type: string
          format: uuid
          description: primary key for the record as UUID
        content:
          type: string
          minLength: 1
        excerpt:
          type: string
          nullable: true
          maxLength: 300
        title:
          type: string
          nullable: true
          maxLength: 255
    FeedbackTypeEnum:
      enum:
      - good
      - bad
      type: string
      description: |-
        * `good` - Good
        * `bad` - Bad
    File:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        file:
          type: string
          format: uri
          description: 'Upload a file to the user''s file library or vault. Supported
            types: pdf, docx, txt, csv, json'
        file_type:
          allOf:
          - $ref: '#/components/schemas/FileTypeEnum'
          description: |-
            Detected type of the uploaded file.

            * `pdf` - PDF
            * `docx` - DOCX
            * `txt` - TXT
            * `csv` - CSV
            * `json` - JSON
            * `other` - Other
        storage_bucket:
          type: integer
          nullable: true
          description: Storage bucket where this file is stored
        storage_path:
          type: string
          readOnly: true
          description: Full storage path including bucket (e.g. 'gcs://bucket/path'
            or 's3://bucket/path')
        original_path:
          type: string
          readOnly: true
          nullable: true
          description: Original path/name of the file before upload
        uploaded_by:
          type: integer
          readOnly: true
          nullable: true
        team:
          type: integer
          nullable: true
        source:
          type: string
          nullable: true
          maxLength: 255
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        is_global:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        collection:
          allOf:
          - $ref: '#/components/schemas/Collection'
          readOnly: true
        volume_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Volume number for multi-volume documents
        part_number:
          type: string
          nullable: true
          description: Part or section number (e.g., 'Part A', 'Section 1')
          maxLength: 20
        collection_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Order of this file within its collection
        filesize:
          type: integer
          readOnly: true
        owner_name:
          type: string
          readOnly: true
        team_name:
          type: string
          readOnly: true
      required:
      - collection
      - created_at
      - file
      - filesize
      - is_global
      - original_path
      - owner_name
      - storage_path
      - team_name
      - title
      - updated_at
      - uploaded_by
      - uuid
    FileIngest:
      type: object
      properties:
        file_ids:
          type: array
          items:
            type: string
            format: uuid
          description: List of file UUIDs to ingest
        knowledgebase_ids:
          type: array
          items:
            type: string
          description: List of knowledge base IDs to ingest the files into (e.g. ['kbo-8df45f-llamaindex-t',
            'kbo-another-kb'])
      required:
      - file_ids
      - knowledgebase_ids
    FileIngestRequest:
      type: object
      properties:
        file_ids:
          type: array
          items:
            type: string
            format: uuid
          description: List of file UUIDs to ingest
        knowledgebase_ids:
          type: array
          items:
            type: string
            minLength: 1
          description: List of knowledge base IDs to ingest the files into (e.g. ['kbo-8df45f-llamaindex-t',
            'kbo-another-kb'])
      required:
      - file_ids
      - knowledgebase_ids
    FileKnowledgeBaseLink:
      type: object
      description: Serializer for listing files in a knowledge base with their processing
        status.
      properties:
        file_id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
          nullable: true
        file_type:
          type: string
        filesize:
          type: integer
        size:
          type: integer
        page_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        status:
          type: string
        progress:
          type: number
          format: double
        error:
          type: string
          nullable: true
        processed_docs:
          type: integer
        total_docs:
          type: integer
        chunk_size:
          type: integer
        chunk_overlap:
          type: integer
        collection:
          allOf:
          - $ref: '#/components/schemas/Collection'
          readOnly: true
      required:
      - chunk_overlap
      - chunk_size
      - collection
      - created_at
      - description
      - error
      - file_id
      - file_type
      - filesize
      - page_count
      - processed_docs
      - progress
      - size
      - status
      - title
      - total_docs
      - updated_at
    FileRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        file:
          type: string
          format: binary
          description: 'Upload a file to the user''s file library or vault. Supported
            types: pdf, docx, txt, csv, json'
        file_type:
          allOf:
          - $ref: '#/components/schemas/FileTypeEnum'
          description: |-
            Detected type of the uploaded file.

            * `pdf` - PDF
            * `docx` - DOCX
            * `txt` - TXT
            * `csv` - CSV
            * `json` - JSON
            * `other` - Other
        storage_bucket:
          type: integer
          nullable: true
          description: Storage bucket where this file is stored
        team:
          type: integer
          nullable: true
        source:
          type: string
          nullable: true
          maxLength: 255
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        volume_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Volume number for multi-volume documents
        part_number:
          type: string
          nullable: true
          description: Part or section number (e.g., 'Part A', 'Section 1')
          maxLength: 20
        collection_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Order of this file within its collection
      required:
      - file
      - title
    FileTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - created_at
      - id
      - name
      - updated_at
    FileTagRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - name
    FileTypeEnum:
      enum:
      - pdf
      - docx
      - txt
      - csv
      - json
      - other
      type: string
      description: |-
        * `pdf` - PDF
        * `docx` - DOCX
        * `txt` - TXT
        * `csv` - CSV
        * `json` - JSON
        * `other` - Other
    GlobalTemplatesResponse:
      type: object
      properties:
        instructions:
          type: array
          items:
            $ref: '#/components/schemas/AgentInstruction'
        expected_outputs:
          type: array
          items:
            $ref: '#/components/schemas/AgentExpectedOutput'
      required:
      - expected_outputs
      - instructions
    GoogleDocFromMarkdownRequestRequest:
      type: object
      properties:
        markdown:
          type: string
          minLength: 1
        title:
          type: string
          minLength: 1
          default: Untitled AI Output
      required:
      - markdown
    GoogleDocFromMarkdownResponse:
      type: object
      properties:
        file_id:
          type: string
        doc_url:
          type: string
          format: uri
        title:
          type: string
      required:
      - doc_url
      - file_id
      - title
    GoogleDriveDownloadResponse:
      type: object
      properties:
        content:
          type: string
          format: uri
        content_type:
          type: string
      required:
      - content
      - content_type
    GoogleDriveFile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        mimeType:
          type: string
        createdTime:
          type: string
          format: date-time
        modifiedTime:
          type: string
          format: date-time
        size:
          type: integer
        iconLink:
          type: string
          format: uri
        webViewLink:
          type: string
          format: uri
      required:
      - id
      - mimeType
      - name
    GoogleDriveListResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/GoogleDriveFile'
        nextPageToken:
          type: string
      required:
      - files
    GoogleDriveRevokeResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          type: string
      required:
      - success
    GoogleDriveUploadResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        mimeType:
          type: string
      required:
      - id
      - mimeType
      - name
    GoogleOAuthCallback:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          readOnly: true
      required:
      - code
      - message
    GoogleOAuthStartResponse:
      type: object
      properties:
        auth_url:
          type: string
          format: uri
      required:
      - auth_url
    Health:
      type: object
      properties:
        status:
          type: string
      required:
      - status
    Invitation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team:
          type: integer
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/Role9aaEnum'
        invited_by:
          type: string
          readOnly: true
        is_accepted:
          type: boolean
      required:
      - email
      - id
      - invited_by
      - team
    InvitationRequest:
      type: object
      properties:
        team:
          type: integer
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        role:
          $ref: '#/components/schemas/Role9aaEnum'
        is_accepted:
          type: boolean
      required:
      - email
      - team
    KnowledgeBase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        knowledgebase_id:
          type: string
          readOnly: true
          description: Unique slugified identifier used for referencing and table
            naming.
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        model_provider:
          type: integer
          nullable: true
          description: LLM provider to use for embeddings in this knowledge base.
        chunk_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Size of chunks used for text splitting during ingestion.
        chunk_overlap:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of characters to overlap between chunks.
        vector_table_name:
          type: string
          readOnly: true
          description: Postgres vector table name used for embeddings.
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the knowledge base was created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the knowledge base was last updated.
        is_file_linked:
          type: string
          readOnly: true
        permissions:
          type: string
          readOnly: true
        role:
          type: string
          readOnly: true
          description: The role of the authenticated user for this knowledge base.
      required:
      - created_at
      - id
      - is_file_linked
      - knowledgebase_id
      - name
      - permissions
      - role
      - updated_at
      - vector_table_name
    KnowledgeBasePdfURL:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        kb:
          type: integer
        url:
          type: string
          format: uri
          maxLength: 500
        is_enabled:
          type: boolean
        added_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - added_at
      - id
      - kb
      - url
    KnowledgeBasePdfURLRequest:
      type: object
      properties:
        kb:
          type: integer
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 500
        is_enabled:
          type: boolean
      required:
      - kb
      - url
    KnowledgeBaseRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        model_provider:
          type: integer
          nullable: true
          description: LLM provider to use for embeddings in this knowledge base.
        chunk_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Size of chunks used for text splitting during ingestion.
        chunk_overlap:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of characters to overlap between chunks.
        permissions_input:
          type: array
          items:
            $ref: '#/components/schemas/PermissionInputRequest'
          writeOnly: true
      required:
      - name
    LinkReachEnum:
      enum:
      - restricted
      - authenticated
      - public
      type: string
      description: |-
        * `restricted` - Restricted
        * `authenticated` - Authenticated
        * `public` - Public
    LinkRoleEnum:
      enum:
      - reader
      - editor
      type: string
      description: |-
        * `reader` - Reader
        * `editor` - Editor
    ListDocument:
      type: object
      description: Serialize documents with limited fields for display in lists.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: primary key for the record as UUID
        abilities:
          type: object
          additionalProperties: {}
          description: Return abilities of the logged-in user on the instance.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Created on
          description: date and time at which a record was created
        creator:
          type: integer
          readOnly: true
          nullable: true
        depth:
          type: integer
          readOnly: true
        excerpt:
          type: string
          readOnly: true
          nullable: true
        is_favorite:
          type: boolean
          readOnly: true
        link_role:
          allOf:
          - $ref: '#/components/schemas/LinkRoleEnum'
          readOnly: true
        link_reach:
          allOf:
          - $ref: '#/components/schemas/LinkReachEnum'
          readOnly: true
        nb_accesses_ancestors:
          type: integer
          readOnly: true
        nb_accesses_direct:
          type: integer
          readOnly: true
        numchild:
          type: integer
          readOnly: true
        path:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Updated on
          description: date and time at which a record was last updated
        user_roles:
          type: string
          readOnly: true
      required:
      - abilities
      - created_at
      - creator
      - depth
      - excerpt
      - id
      - is_favorite
      - link_reach
      - link_role
      - nb_accesses_ancestors
      - nb_accesses_direct
      - numchild
      - path
      - updated_at
      - user_roles
    ListDocumentRequest:
      type: object
      description: Serialize documents with limited fields for display in lists.
      properties:
        title:
          type: string
          nullable: true
          maxLength: 255
    Membership:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/Role9aaEnum'
      required:
      - display_name
      - first_name
      - id
      - last_name
      - role
      - user_id
    MembershipRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role9aaEnum'
      required:
      - role
    ModelProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        provider:
          allOf:
          - $ref: '#/components/schemas/ModelProviderProviderEnum'
          description: |-
            LLM provider (e.g., OpenAI, Google, Anthropic, Groq).

            * `openai` - OpenAI
            * `google` - Google
            * `anthropic` - Anthropic
            * `groq` - Groq
        model_name:
          type: string
          description: Model identifier (e.g., gpt-4o, gemini-pro, claude-3).
          maxLength: 50
        is_enabled:
          type: boolean
          description: Whether this model is available for use.
      required:
      - id
      - model_name
      - provider
    ModelProviderProviderEnum:
      enum:
      - openai
      - google
      - anthropic
      - groq
      type: string
      description: |-
        * `openai` - OpenAI
        * `google` - Google
        * `anthropic` - Anthropic
        * `groq` - Groq
    NullEnum:
      enum:
      - null
    OpenInvitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        team_name:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        verified:
          type: boolean
          readOnly: true
      required:
      - email
      - id
      - team_name
      - verified
    PaginatedAgentExpectedOutputList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AgentExpectedOutput'
    PaginatedAgentInstructionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AgentInstruction'
    PaginatedAgentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedChatSessionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatSession'
    PaginatedDocumentAccessLightList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentAccessLight'
    PaginatedDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedFileKnowledgeBaseLinkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FileKnowledgeBaseLink'
    PaginatedFileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/File'
    PaginatedFileTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FileTag'
    PaginatedInvitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
    PaginatedKnowledgeBasePdfURLList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBasePdfURL'
    PaginatedModelProviderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ModelProvider'
    PaginatedProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedStorageBucketList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StorageBucket'
    PaginatedTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PaginatedTeamList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    PaginatedTemplateAccessList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TemplateAccess'
    PaginatedTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Template'
    PaginatedUserFeedbackList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserFeedback'
    PaginatedVaultFileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VaultFile'
    PatchedAgentExpectedOutputRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: Optional title for this expected output, e.g., 'Basic Research
            Report'.
          maxLength: 255
        expected_output:
          type: string
          minLength: 1
        category:
          $ref: '#/components/schemas/CategoryEnum'
        is_enabled:
          type: boolean
        is_global:
          type: boolean
        user:
          type: integer
        agent:
          type: integer
          nullable: true
    PatchedAgentInstructionRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: Optional title for the instruction, e.g., 'Default Retrieval
            Strategy'.
          maxLength: 255
        instruction:
          type: string
          minLength: 1
        category:
          $ref: '#/components/schemas/CategoryEnum'
        is_template:
          type: boolean
        is_enabled:
          type: boolean
        is_global:
          type: boolean
        is_system:
          type: boolean
          description: Flag for platform/system-level instructions.
        user:
          type: integer
    PatchedAgentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        category:
          type: integer
          nullable: true
        model:
          type: integer
          nullable: true
          description: AI model used by the agent.
        instructions_id:
          type: integer
          writeOnly: true
        custom_instruction:
          type: string
          writeOnly: true
          minLength: 1
        expected_output_id:
          type: integer
          writeOnly: true
        expected_output_data:
          allOf:
          - $ref: '#/components/schemas/AgentExpectedOutputRequest'
          writeOnly: true
        knowledge_base:
          type: string
          minLength: 1
        search_knowledge:
          type: boolean
        cite_knowledge:
          type: boolean
        add_datetime_to_instructions:
          type: boolean
        show_tool_calls:
          type: boolean
        markdown_enabled:
          type: boolean
        reasoning:
          type: boolean
        debug_mode:
          type: boolean
          description: Enable debug mode for logging.
        num_history_responses:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of past responses to keep in chat memory.
        is_global:
          type: boolean
        team:
          type: integer
          nullable: true
        subscriptions:
          type: array
          items:
            type: integer
            title: ID
    PatchedChatSessionRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 3
        agent_id:
          type: string
          writeOnly: true
          minLength: 1
    PatchedCollectionRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        collection_type:
          $ref: '#/components/schemas/CollectionTypeEnum'
        jurisdiction:
          type: string
          nullable: true
          maxLength: 100
        regulation_number:
          type: string
          nullable: true
          maxLength: 50
        effective_date:
          type: string
          format: date
          nullable: true
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedDocumentAccessRequest:
      type: object
      description: Serialize document accesses.
      properties:
        user_id:
          type: integer
          writeOnly: true
          nullable: true
        team:
          type: string
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleAbdEnum'
    PatchedDocumentRequest:
      type: object
      description: Serialize documents with all fields for display in detail views.
      properties:
        content:
          type: string
          minLength: 1
        excerpt:
          type: string
          nullable: true
          maxLength: 300
        title:
          type: string
          nullable: true
          maxLength: 255
    PatchedFileRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        file:
          type: string
          format: binary
          description: 'Upload a file to the user''s file library or vault. Supported
            types: pdf, docx, txt, csv, json'
        file_type:
          allOf:
          - $ref: '#/components/schemas/FileTypeEnum'
          description: |-
            Detected type of the uploaded file.

            * `pdf` - PDF
            * `docx` - DOCX
            * `txt` - TXT
            * `csv` - CSV
            * `json` - JSON
            * `other` - Other
        storage_bucket:
          type: integer
          nullable: true
          description: Storage bucket where this file is stored
        team:
          type: integer
          nullable: true
        source:
          type: string
          nullable: true
          maxLength: 255
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        volume_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Volume number for multi-volume documents
        part_number:
          type: string
          nullable: true
          description: Part or section number (e.g., 'Part A', 'Section 1')
          maxLength: 20
        collection_order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Order of this file within its collection
    PatchedFileTagRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
    PatchedInvitationRequest:
      type: object
      properties:
        team:
          type: integer
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        role:
          $ref: '#/components/schemas/Role9aaEnum'
        is_accepted:
          type: boolean
    PatchedKnowledgeBasePdfURLRequest:
      type: object
      properties:
        kb:
          type: integer
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 500
        is_enabled:
          type: boolean
    PatchedKnowledgeBaseRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        model_provider:
          type: integer
          nullable: true
          description: LLM provider to use for embeddings in this knowledge base.
        chunk_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Size of chunks used for text splitting during ingestion.
        chunk_overlap:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Number of characters to overlap between chunks.
        permissions_input:
          type: array
          items:
            $ref: '#/components/schemas/PermissionInputRequest'
          writeOnly: true
    PatchedProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        owner:
          type: integer
        team:
          type: integer
          nullable: true
          description: Team this project belongs to (optional if personal).
        members:
          type: array
          items:
            type: integer
          description: Direct users with access to this project.
        shared_with_teams:
          type: array
          items:
            type: integer
          description: Teams with access to this project.
        tags:
          type: array
          items:
            type: integer
        starred_by:
          type: array
          items:
            type: integer
    PatchedStorageBucketRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Display name for this storage configuration
          maxLength: 255
        provider:
          allOf:
          - $ref: '#/components/schemas/StorageBucketProviderEnum'
          description: |-
            Storage provider type

            * `local` - Local Storage
            * `aws_s3` - Amazon S3
            * `gcs` - Google Cloud Storage
        bucket_name:
          type: string
          minLength: 1
          description: Actual bucket name (e.g. 'my-company-docs')
          maxLength: 255
        region:
          type: string
          nullable: true
          description: Storage region (if applicable)
          maxLength: 50
        credentials:
          nullable: true
          description: Storage credentials (encrypted). Not needed for system buckets.
        is_system:
          type: boolean
          description: Whether this is a system bucket (e.g. bh-opie-media)
        team:
          type: integer
          nullable: true
          description: Optional team. System buckets have no team.
    PatchedTagRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
    PatchedTeamRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          minLength: 1
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedTemplateAccessRequest:
      type: object
      description: Serialize template accesses.
      properties:
        user:
          type: integer
          nullable: true
        team:
          type: string
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleAbdEnum'
    PatchedTemplateRequest:
      type: object
      description: Serialize templates.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        css:
          type: string
        code:
          type: string
        is_public:
          type: boolean
          title: Public
          description: Whether this template is public for anyone to use.
    PatchedUserFeedbackRequest:
      type: object
      properties:
        session:
          type: string
          format: uuid
        chat_id:
          type: string
          minLength: 1
          description: ID of the chat message or response being reviewed.
          maxLength: 128
        feedback_type:
          $ref: '#/components/schemas/FeedbackTypeEnum'
        feedback_text:
          type: string
          nullable: true
          description: Optional user feedback.
    PatchedUserRequest:
      type: object
      properties:
        language:
          nullable: true
          description: |-
            The language in which the user wants to see the interface.

            * `en` - English
            * `fr` - French
          oneOf:
          - $ref: '#/components/schemas/UserLanguageEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    PatchedVaultFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        project:
          type: integer
          nullable: true
        uploaded_by:
          type: integer
        team:
          type: integer
          nullable: true
        shared_with_users:
          type: array
          items:
            type: integer
        shared_with_teams:
          type: array
          items:
            type: integer
    PermissionInput:
      type: object
      properties:
        team_id:
          type: integer
          description: ID of the team
        role:
          allOf:
          - $ref: '#/components/schemas/PermissionInputRoleEnum'
          description: |-
            Role for the team

            * `viewer` - viewer
            * `editor` - editor
            * `owner` - owner
      required:
      - role
      - team_id
    PermissionInputRequest:
      type: object
      properties:
        team_id:
          type: integer
          description: ID of the team
        role:
          allOf:
          - $ref: '#/components/schemas/PermissionInputRoleEnum'
          description: |-
            Role for the team

            * `viewer` - viewer
            * `editor` - editor
            * `owner` - owner
      required:
      - role
      - team_id
    PermissionInputRoleEnum:
      enum:
      - viewer
      - editor
      - owner
      type: string
      description: |-
        * `viewer` - viewer
        * `editor` - editor
        * `owner` - owner
    Price:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        product_name:
          type: string
        human_readable_price:
          type: string
          readOnly: true
        payment_amount:
          type: string
          readOnly: true
        nickname:
          type: string
          description: A brief description of the plan, hidden from customers.
          maxLength: 250
        unit_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: The unit amount in cents to be charged, represented as a whole
            integer if possible. Null if a sub-cent precision is required.
      required:
      - human_readable_price
      - id
      - payment_amount
      - product_name
    PriceRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        product_name:
          type: string
          minLength: 1
        nickname:
          type: string
          description: A brief description of the plan, hidden from customers.
          maxLength: 250
        unit_amount:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          nullable: true
          description: The unit amount in cents to be charged, represented as a whole
            integer if possible. Null if a sub-cent precision is required.
      required:
      - id
      - product_name
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        owner:
          type: integer
        team:
          type: integer
          nullable: true
          description: Team this project belongs to (optional if personal).
        members:
          type: array
          items:
            type: integer
          description: Direct users with access to this project.
        shared_with_teams:
          type: array
          items:
            type: integer
          description: Teams with access to this project.
        tags:
          type: array
          items:
            type: integer
        starred_by:
          type: array
          items:
            type: integer
      required:
      - created_at
      - id
      - name
      - owner
      - updated_at
      - uuid
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        owner:
          type: integer
        team:
          type: integer
          nullable: true
          description: Team this project belongs to (optional if personal).
        members:
          type: array
          items:
            type: integer
          description: Direct users with access to this project.
        shared_with_teams:
          type: array
          items:
            type: integer
          description: Teams with access to this project.
        tags:
          type: array
          items:
            type: integer
        starred_by:
          type: array
          items:
            type: integer
      required:
      - name
      - owner
    Role9aaEnum:
      enum:
      - admin
      - member
      type: string
      description: |-
        * `admin` - Administrator
        * `member` - Member
    RoleAbdEnum:
      enum:
      - reader
      - editor
      - administrator
      - owner
      type: string
      description: |-
        * `reader` - Reader
        * `editor` - Editor
        * `administrator` - Administrator
        * `owner` - Owner
    StatusEnum:
      enum:
      - active
      - canceled
      - incomplete
      - incomplete_expired
      - past_due
      - trialing
      - unpaid
      type: string
      description: |-
        * `active` - Active
        * `canceled` - Canceled
        * `incomplete` - Incomplete
        * `incomplete_expired` - Incomplete Expired
        * `past_due` - Past due
        * `trialing` - Trialing
        * `unpaid` - Unpaid
    StorageBucket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: Display name for this storage configuration
          maxLength: 255
        provider:
          allOf:
          - $ref: '#/components/schemas/StorageBucketProviderEnum'
          description: |-
            Storage provider type

            * `local` - Local Storage
            * `aws_s3` - Amazon S3
            * `gcs` - Google Cloud Storage
        bucket_name:
          type: string
          description: Actual bucket name (e.g. 'my-company-docs')
          maxLength: 255
        region:
          type: string
          nullable: true
          description: Storage region (if applicable)
          maxLength: 50
        credentials:
          nullable: true
          description: Storage credentials (encrypted). Not needed for system buckets.
        is_system:
          type: boolean
          description: Whether this is a system bucket (e.g. bh-opie-media)
        team:
          type: integer
          nullable: true
          description: Optional team. System buckets have no team.
      required:
      - bucket_name
      - created_at
      - id
      - name
      - updated_at
    StorageBucketProviderEnum:
      enum:
      - local
      - aws_s3
      - gcs
      type: string
      description: |-
        * `local` - Local Storage
        * `aws_s3` - Amazon S3
        * `gcs` - Google Cloud Storage
    StorageBucketRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: Display name for this storage configuration
          maxLength: 255
        provider:
          allOf:
          - $ref: '#/components/schemas/StorageBucketProviderEnum'
          description: |-
            Storage provider type

            * `local` - Local Storage
            * `aws_s3` - Amazon S3
            * `gcs` - Google Cloud Storage
        bucket_name:
          type: string
          minLength: 1
          description: Actual bucket name (e.g. 'my-company-docs')
          maxLength: 255
        region:
          type: string
          nullable: true
          description: Storage region (if applicable)
          maxLength: 50
        credentials:
          nullable: true
          description: Storage credentials (encrypted). Not needed for system buckets.
        is_system:
          type: boolean
          description: Whether this is a system bucket (e.g. bh-opie-media)
        team:
          type: integer
          nullable: true
          description: Optional team. System buckets have no team.
      required:
      - bucket_name
      - name
    Subscription:
      type: object
      description: A serializer for Subscriptions which uses the SubscriptionWrapper
        object under the hood
      properties:
        id:
          type: string
          maxLength: 255
        display_name:
          type: string
        start_date:
          type: string
          format: date-time
          nullable: true
          description: Date when the subscription was first created. The date might
            differ from the created date due to backdating.
        billing_interval:
          type: string
        current_period_start:
          type: string
          format: date-time
          description: Start of the current period for which the subscription has
            been invoiced.
        current_period_end:
          type: string
          format: date-time
          description: End of the current period for which the subscription has been
            invoiced. At the end of this period, a new invoice will be created.
        cancel_at_period_end:
          type: boolean
          description: If the subscription has been canceled with the ``at_period_end``
            flag set to true, ``cancel_at_period_end`` on the subscription will be
            true. You can use this attribute to determine whether a subscription that
            has a status of active is scheduled to be canceled at the end of the current
            period.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            The status of this subscription.

            * `active` - Active
            * `canceled` - Canceled
            * `incomplete` - Incomplete
            * `incomplete_expired` - Incomplete Expired
            * `past_due` - Past due
            * `trialing` - Trialing
            * `unpaid` - Unpaid
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The quantity applied to this subscription. This value will
            be `null` for multi-plan subscriptions
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionItem'
      required:
      - billing_interval
      - current_period_end
      - current_period_start
      - display_name
      - id
      - items
      - status
    SubscriptionItem:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        price:
          $ref: '#/components/schemas/Price'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: The quantity of the plan to which the customer should be subscribed.
      required:
      - id
      - price
    SubscriptionItemRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        price:
          $ref: '#/components/schemas/PriceRequest'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: The quantity of the plan to which the customer should be subscribed.
      required:
      - id
      - price
    SubscriptionRequest:
      type: object
      description: A serializer for Subscriptions which uses the SubscriptionWrapper
        object under the hood
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 255
        display_name:
          type: string
          minLength: 1
        start_date:
          type: string
          format: date-time
          nullable: true
          description: Date when the subscription was first created. The date might
            differ from the created date due to backdating.
        billing_interval:
          type: string
          minLength: 1
        current_period_start:
          type: string
          format: date-time
          description: Start of the current period for which the subscription has
            been invoiced.
        current_period_end:
          type: string
          format: date-time
          description: End of the current period for which the subscription has been
            invoiced. At the end of this period, a new invoice will be created.
        cancel_at_period_end:
          type: boolean
          description: If the subscription has been canceled with the ``at_period_end``
            flag set to true, ``cancel_at_period_end`` on the subscription will be
            true. You can use this attribute to determine whether a subscription that
            has a status of active is scheduled to be canceled at the end of the current
            period.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            The status of this subscription.

            * `active` - Active
            * `canceled` - Canceled
            * `incomplete` - Incomplete
            * `incomplete_expired` - Incomplete Expired
            * `past_due` - Past due
            * `trialing` - Trialing
            * `unpaid` - Unpaid
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The quantity applied to this subscription. This value will
            be `null` for multi-plan subscriptions
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionItemRequest'
      required:
      - billing_interval
      - current_period_end
      - current_period_start
      - display_name
      - id
      - items
      - status
    SupportedApp:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        key:
          type: string
          maxLength: 50
        title:
          type: string
          maxLength: 100
        description:
          type: string
        icon_url:
          type: string
          format: uri
          maxLength: 200
        is_enabled:
          type: boolean
      required:
      - id
      - key
      - title
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - created_at
      - id
      - name
      - updated_at
    TagRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
      required:
      - name
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
          readOnly: true
        dashboard_url:
          type: string
          readOnly: true
        is_admin:
          type: boolean
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          readOnly: true
        has_active_subscription:
          type: boolean
          readOnly: true
      required:
      - dashboard_url
      - has_active_subscription
      - id
      - invitations
      - is_admin
      - members
      - name
      - subscription
    TeamRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          minLength: 1
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
    Template:
      type: object
      description: Serialize templates.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: primary key for the record as UUID
        title:
          type: string
          maxLength: 255
        accesses:
          type: array
          items:
            $ref: '#/components/schemas/TemplateAccess'
          readOnly: true
        abilities:
          type: object
          additionalProperties: {}
          description: Return abilities of the logged-in user on the instance.
          readOnly: true
        css:
          type: string
        code:
          type: string
        is_public:
          type: boolean
          title: Public
          description: Whether this template is public for anyone to use.
      required:
      - abilities
      - accesses
      - id
      - title
    TemplateAccess:
      type: object
      description: Serialize template accesses.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: primary key for the record as UUID
        user:
          type: integer
          nullable: true
        team:
          type: string
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleAbdEnum'
        abilities:
          type: object
          additionalProperties: {}
          description: Return abilities of the logged-in user on the instance.
          readOnly: true
      required:
      - abilities
      - id
    TemplateAccessRequest:
      type: object
      description: Serialize template accesses.
      properties:
        user:
          type: integer
          nullable: true
        team:
          type: string
          maxLength: 100
        role:
          $ref: '#/components/schemas/RoleAbdEnum'
    TemplateRequest:
      type: object
      description: Serialize templates.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        css:
          type: string
        code:
          type: string
        is_public:
          type: boolean
          title: Public
          description: Whether this template is public for anyone to use.
      required:
      - title
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    UploadFileResponse:
      type: object
      description: Response serializer for file uploads.
      properties:
        message:
          type: string
          description: Success message with number of files uploaded
        documents:
          type: array
          items:
            $ref: '#/components/schemas/File'
          description: List of successfully uploaded and processed documents
        collection:
          allOf:
          - $ref: '#/components/schemas/Collection'
          description: Collection created or used for the upload
        failed_uploads:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: List of files that failed to upload with error messages
      required:
      - documents
      - message
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          nullable: true
          title: Identity email address
        full_name:
          type: string
          readOnly: true
          nullable: true
        short_name:
          type: string
          readOnly: true
          nullable: true
        language:
          nullable: true
          description: |-
            The language in which the user wants to see the interface.

            * `en` - English
            * `fr` - French
          oneOf:
          - $ref: '#/components/schemas/UserLanguageEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_superuser:
          type: boolean
          readOnly: true
      required:
      - email
      - full_name
      - id
      - is_superuser
      - short_name
    UserFeedback:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        session:
          type: string
          format: uuid
        chat_id:
          type: string
          description: ID of the chat message or response being reviewed.
          maxLength: 128
        feedback_type:
          $ref: '#/components/schemas/FeedbackTypeEnum'
        feedback_text:
          type: string
          nullable: true
          description: Optional user feedback.
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - chat_id
      - created_at
      - feedback_type
      - id
      - session
      - user
    UserFeedbackRequest:
      type: object
      properties:
        session:
          type: string
          format: uuid
        chat_id:
          type: string
          minLength: 1
          description: ID of the chat message or response being reviewed.
          maxLength: 128
        feedback_type:
          $ref: '#/components/schemas/FeedbackTypeEnum'
        feedback_text:
          type: string
          nullable: true
          description: Optional user feedback.
      required:
      - chat_id
      - feedback_type
      - session
    UserInvitationsResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OpenInvitation'
      required:
      - results
    UserLanguageEnum:
      enum:
      - en
      - fr
      type: string
      description: |-
        * `en` - English
        * `fr` - French
    UserRequest:
      type: object
      properties:
        language:
          nullable: true
          description: |-
            The language in which the user wants to see the interface.

            * `en` - English
            * `fr` - French
          oneOf:
          - $ref: '#/components/schemas/UserLanguageEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    UserSignupStats:
      type: object
      properties:
        date:
          type: string
          format: date
        count:
          type: integer
      required:
      - count
      - date
    VaultFile:
      type: object
      properties:
        file:
          type: string
          format: uri
        filename:
          type: string
          readOnly: true
        original_filename:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        project:
          type: integer
          nullable: true
        uploaded_by:
          type: integer
        team:
          type: integer
          nullable: true
        shared_with_users:
          type: array
          items:
            type: integer
        shared_with_teams:
          type: array
          items:
            type: integer
        size:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        inherited_users:
          type: string
          readOnly: true
        inherited_teams:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - file
      - filename
      - id
      - inherited_teams
      - inherited_users
      - original_filename
      - size
      - type
      - updated_at
      - uploaded_by
    VaultFileRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        project:
          type: integer
          nullable: true
        uploaded_by:
          type: integer
        team:
          type: integer
          nullable: true
        shared_with_users:
          type: array
          items:
            type: integer
        shared_with_teams:
          type: array
          items:
            type: integer
      required:
      - file
      - uploaded_by
    VisibilityEnum:
      enum:
      - public
      - private
      type: string
      description: |-
        * `public` - Public
        * `private` - Private
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: bh_opie_sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: auth
  description: Authentication operations
- name: users
  description: User management operations
- name: teams
  description: Team management operations
- name: files
  description: File management operations
- name: projects
  description: Project management operations
- name: integrations
  description: Third-party integrations
